name: Release From Dev Build

on:
  push:
    tags:
      - "dev*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        -
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Gradle
        run: chmod +x gradlew

      - name: Build Gradle Artifact
        run: gradle build

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pre-Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Create Zip of files
        working-directory: './build/libs'
        run: zip deep-store-${{ steps.vars.outputs.tag }}.zip *.jar

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: 'build/libs/deep-store-${{ steps.vars.outputs.tag }}.zip'
          asset_name: deep-store-${{ github.ref }}.zip
          asset_content_type: application/zip